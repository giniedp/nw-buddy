package ts

var ENUMS = map[string]map[string]string{
	"AchievementData": {
		"Category": "AchievementCategory",
	},
	"VitalsBaseData": {
		"Family":           "VitalsFamily",
		"VitalsCategories": "VitalsCategory",
		"CreatureType":     "CreatureType",
		"LootTags":         "LootTag",
	},
	"EntitlementData": {
		"RewardType": "EntitlementRewardType",
		"SourceType": "EntitlementSourceType",
	},
	"CraftingRecipeData": {
		"Type1":            "CraftingIngredientType",
		"Type2":            "CraftingIngredientType",
		"Type3":            "CraftingIngredientType",
		"Type4":            "CraftingIngredientType",
		"Type5":            "CraftingIngredientType",
		"Type6":            "CraftingIngredientType",
		"Type7":            "CraftingIngredientType",
		"Type8":            "CraftingIngredientType",
		"Type9":            "CraftingIngredientType",
		"Type10":           "CraftingIngredientType",
		"CraftingCategory": "CraftingCategory",
		"Tradeskill":       "CraftingTradeskill",
	},
	"BuffBucketData": {
		"TableType": "BuffTableType",
		"BuffType1": "BuffType",
		"BuffType2": "BuffType",
		"BuffType3": "BuffType",
		"BuffType4": "BuffType",
		"BuffType5": "BuffType",
		"BuffType6": "BuffType",
	},
	"ArmorAppearanceDefinitions": {
		"ItemClass": "ItemClass",
	},
	"WeaponAppearanceDefinitions": {
		"ItemClass": "ItemClass",
	},
	"CategoricalProgressionData": {
		"CategoricalProgressionId": "ProgressionCategory",
	},
	"WeaponItemDefinitions": {
		"MannequinTag": "MannequinTag",
	},
	"MasterItemDefinitions": {
		"ItemClass":       "ItemClass",
		"ItemType":        "ItemType",
		"TradingGroup":    "TradingGroup",
		"TradingFamily":   "TradingFamily",
		"TradingCategory": "TradingCategory",
	},
	"HouseItems": {
		"Placement":           "ItemPlacement",
		"ItemType":            "ItemType",
		"HousingTags":         "HousingTag",
		"TradingGroup":        "TradingGroup",
		"TradingFamily":       "TradingFamily",
		"TradingCategory":     "TradingCategory",
		"HousingTag1 Placed":  "HousingTag",
		"HousingTag2 Points":  "HousingTag",
		"HousingTag3 Limiter": "HousingTag",
		"HousingTag5 Buffs":   "HousingTag",
	},
	"DamageTypeData": {
		"TypeID":   "DamageType",
		"Category": "DamageCategory",
	},
	"DamageData": {
		"DamageType": "DamageType",
	},
	// // Loottable: ['Conditions'],
	"PerkData": {
		"PerkType":       "PerkType",
		"ItemClass":      "ItemClass",
		"WeaponTag":      "WeaponTag",
		"ConditionEvent": "PerkConditionEvent",
		"DayPhases":      "DayPhases",
	},
	"AbilityData": {
		"AbilityCooldownComparisonType":  "ComparisonType",
		"DistComparisonType":             "ComparisonType",
		"LoadedAmmoCountComparisonType":  "ComparisonType",
		"MyComparisonType":               "ComparisonType",
		"MyManaComparisonType":           "ComparisonType",
		"MyStaminaComparisonType":        "ComparisonType",
		"NumAroundComparisonType":        "ComparisonType",
		"NumberOfHitsComparisonType":     "ComparisonType",
		"TargetComparisonType":           "ComparisonType",
		"WeaponTag":                      "WeaponTag",
		"UICategory":                     "UICategory",
		"AttackerVitalsCategory":         "VitalsCategory",
		"TargetVitalsCategory":           "VitalsCategory",
		"AbilityOnCooldownOptions":       "AbilityOnCooldownOptions",
		"AttackType":                     "AttackType",
		"CDRImmediatelyOptions":          "CDRImmediatelyOptions",
		"EquipLoadCategory":              "EquipLoadCategory",
		"GatheringTradeskill":            "GatheringTradeskill",
		"StatusEffectCategories":         "StatusEffectCategory",
		"StatusEffectCategoriesList":     "StatusEffectCategory",
		"StatusEffectDurationCats":       "StatusEffectCategory",
		"TargetStatusEffectCategory":     "StatusEffectCategory",
		"TargetStatusEffectDurationCats": "StatusEffectCategory",
		"DamageTypes":                    "DamageType",
		"DamageCategory":                 "DamageCategory",
	},
	"StatusEffectData": {
		"EffectCategories": "StatusEffectCategory",
		"HitCondition":     "HitCondition",
		"DamageType":       "DamageType",
	},
	"AffixStatData": {
		"DamageType": "DamageType",
	},
}
